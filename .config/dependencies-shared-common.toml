[versions]
# https://kotlinlang.org/docs/gradle-configure-project.html#apply-the-plugin
kotlin = "1.9.20"
# https://plugins.gradle.org/plugin/org.gradle.kotlin.kotlin-dsl
# https://github.com/gradle/gradle/blob/master/build-logic/kotlin-dsl/build.gradle.kts
kotlin-dsl = "4.2.0"
# https://github.com/Kotlin/kotlinx.serialization
kotlin-serialization = "1.6.0"
# https://github.com/Kotlin/kotlinx.coroutines
kotlin-coroutines = "1.7.3"
# 主版本：https://github.com/ktorio/ktor
# wasm 版本：https://maven.pkg.jetbrains.space/kotlin/p/wasm/experimental/io/ktor/ktor-client/
ktor = "2.3.6"
# compose
# https://maven.google.com/web/index.html?q=bom#androidx.compose:compose-bom
compose-bom = "2023.10.01"
# https://maven.google.com/web/index.html?q=compose#androidx.compose.runtime:runtime
compose-common = "1.5.4"
compose-material3 = "1.1.2"
# https://search.maven.org/artifact/org.jetbrains.compose.compiler/compiler
compose-plugin-compiler = "1.5.3"
# https://maven.google.com/web/index.html?q=compiler#androidx.compose.compiler:compiler
compose-androidx-compiler = "1.5.3"
# https://github.com/JetBrains/compose-multiplatform/releases
# https://central.sonatype.com/artifact/org.jetbrains.compose/org.jetbrains.compose.gradle.plugin/versions
# wasm 版：https://maven.pkg.jetbrains.space/kotlin/p/wasm/experimental/org/jetbrains/compose/compose-gradle-plugin/
compose-plugin = "1.5.10"
#compose-plugin = "1.5.1-dev-wasm01"
compose-paging = "3.2.1"

compose-navigation = "2.7.4"
accompanist = "0.30.1"
compose-constraintlayout = "1.0.1"
# androidx-annotation
androidx-annotation = "1.7.0"
# ksp 版本列表 https://github.com/google/ksp/releases?page=1
ksp = "1.9.20-1.0.14"
# plugins
# https://central.sonatype.com/artifact/com.vanniktech.maven.publish/com.vanniktech.maven.publish.gradle.plugin
maven-publish = "0.25.3"
# https://plugins.gradle.org/plugin/com.gradle.plugin-publish
gradle-publish = "1.2.1"
# https://github.com/cashapp/molecule/releases
molecule = "1.3.0"
# koin https://insert-koin.io/docs/setup/koin
koin = "3.5.0"
koin-compose = "1.1.0"
koin-ktor = "3.5.1"
# https://mvnrepository.com/artifact/io.insert-koin/koin-ksp-compiler
# https://mvnrepository.com/artifact/io.insert-koin/koin-annotations
koin-annotations = "1.3.0"
# https://kermit.touchlab.co/docs/
# https://search.maven.org/search?q=g:co.touchlab%20a:kermit
kermit = "2.0.2"
# https://github.com/cashapp/sqldelight
# https://cashapp.github.io/sqldelight/2.0.0/
sqldelight = "2.0.0"
# https://github.com/russhwolf/multiplatform-settings
multiplatform-settings = "1.1.0"
# https://github.com/ctripcorp/mmkv-kotlin
mmkv = "1.2.8"

[libraries]
# plugin source
plugin-source-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-source-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-plugin" }
# kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-script-runtime = { module = "org.jetbrains.kotlin:kotlin-script-runtime", version.ref = "kotlin" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
# kotin coroutines
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlin-coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutines" }
# androidx
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
# ktor
# 目前 maven 发布插件不支持 bom, 暂停使用
ktor-bom = { module = "io.ktor:ktor-bom", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
# ios
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
# js
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
# macOS / Windows / Linux
ktor-client-curl = { module = "io.ktor:ktor-client-curl", version.ref = "ktor" }
ktor-client-jvm = { module = "io.ktor:ktor-client-jvm", version.ref = "ktor" }
# koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin-ktor" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-annotations" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations" }
# kermit
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
# sqldelight
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-paging = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sqldelight" }
sqldelight-primitive = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }
# multiplatform-settings
multiplatform-settings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
# mmkv kotlin
mmkv = { module = "com.ctrip.flight.mmkv:mmkv-kotlin", version.ref = "mmkv" }
# compose
# bom platform mapping: https://developer.android.com/jetpack/compose/bom/bom-mapping
# 目前 maven 发布插件不支持 bom, 暂停使用
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-animation = { module = "androidx.compose.animation:animation", version.ref = "compose-common" }
compose-animation-android = { module = "androidx.compose.animation:animation-android", version.ref = "compose-common" }
compose-animation-core = { module = "androidx.compose.animation:animation-core", version.ref = "compose-common" }
compose-animation-core-android = { module = "androidx.compose.animation:animation-core-android", version.ref = "compose-common" }
compose-animation-graphics = { module = "androidx.compose.animation:animation-graphics", version.ref = "compose-common" }
compose-animation-graphics-android = { module = "androidx.compose.animation:animation-graphics-android", version.ref = "compose-common" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose-common" }
compose-foundation-android = { module = "androidx.compose.foundation:foundation-android", version.ref = "compose-common" }
compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "compose-common" }
compose-foundation-layout-android = { module = "androidx.compose.foundation:foundation-layout-android", version.ref = "compose-common" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose-common" }
compose-material-android = { module = "androidx.compose.material:material-android", version.ref = "compose-common" }
compose-material-icons-core = { module = "androidx.compose.material:material-icons-core", version.ref = "compose-common" }
compose-material-icons-core-android = { module = "androidx.compose.material:material-icons-core-android", version.ref = "compose-common" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose-common" }
compose-material-icons-extended-android = { module = "androidx.compose.material:material-icons-extended-android", version.ref = "compose-common" }
compose-material-ripple = { module = "androidx.compose.material:material-ripple", version.ref = "compose-common" }
compose-material-ripple-android = { module = "androidx.compose.material:material-ripple-android", version.ref = "compose-common" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-material3-window-size = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "compose-material3" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose-common" }
compose-runtime-android = { module = "androidx.compose.runtime:runtime-android", version.ref = "compose-common" }
compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose-common" }
compose-runtime-rxjava2 = { module = "androidx.compose.runtime:runtime-rxjava2", version.ref = "compose-common" }
compose-runtime-rxjava3 = { module = "androidx.compose.runtime:runtime-rxjava3", version.ref = "compose-common" }
compose-runtime-saveable = { module = "androidx.compose.runtime:runtime-saveable", version.ref = "compose-common" }
compose-runtime-saveable-android = { module = "androidx.compose.runtime:runtime-saveable-android", version.ref = "compose-common" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose-common" }
compose-ui-android = { module = "androidx.compose.ui:ui-android", version.ref = "compose-common" }
compose-ui-android-stubs = { module = "androidx.compose.ui:ui-android-stubs", version.ref = "compose-common" }
compose-ui-geometry = { module = "androidx.compose.ui:ui-geometry", version.ref = "compose-common" }
compose-ui-geometry-android = { module = "androidx.compose.ui:ui-geometry-android", version.ref = "compose-common" }
compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics", version.ref = "compose-common" }
compose-ui-graphics-android = { module = "androidx.compose.ui:ui-graphics-android", version.ref = "compose-common" }
compose-ui-test = { module = "androidx.compose.ui:ui-test", version.ref = "compose-common" }
compose-ui-test-android = { module = "androidx.compose.ui:ui-test-android", version.ref = "compose-common" }
compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose-common" }
compose-ui-test-junit4-android = { module = "androidx.compose.ui:ui-test-junit4-android", version.ref = "compose-common" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose-common" }
compose-ui-text = { module = "androidx.compose.ui:ui-text", version.ref = "compose-common" }
compose-ui-text-android = { module = "androidx.compose.ui:ui-text-android", version.ref = "compose-common" }
compose-ui-text-google-fonts = { module = "androidx.compose.ui:ui-text-google-fonts", version.ref = "compose-common" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-common" }
compose-ui-tooling-android = { module = "androidx.compose.ui:ui-tooling-android", version.ref = "compose-common" }
compose-ui-tooling-data = { module = "androidx.compose.ui:ui-tooling-data", version.ref = "compose-common" }
compose-ui-tooling-data-android = { module = "androidx.compose.ui:ui-tooling-data-android", version.ref = "compose-common" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-common" }
compose-ui-tooling-preview-android = { module = "androidx.compose.ui:ui-tooling-preview-android", version.ref = "compose-common" }
compose-ui-unit = { module = "androidx.compose.ui:ui-unit", version.ref = "compose-common" }
compose-ui-unit-android = { module = "androidx.compose.ui:ui-unit-android", version.ref = "compose-common" }
compose-ui-util = { module = "androidx.compose.ui:ui-util", version.ref = "compose-common" }
compose-ui-util-android = { module = "androidx.compose.ui:ui-util-android", version.ref = "compose-common" }
compose-ui-viewbinding = { module = "androidx.compose.ui:ui-viewbinding", version.ref = "compose-common" }
# other library for compose
compose-paging = { module = "androidx.paging:paging-compose", version.ref = "compose-paging" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "compose-navigation" }
compose-flowLayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "accompanist" }
compose-constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "compose-constraintlayout" }
compose-navigation-animiaton = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
compose-placeholder = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "accompanist" }
compose-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
# ksp
ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
# molecule
molecule = { module = "app.cash.molecule:molecule-runtime", version.ref = "molecule" }

[plugins]
# kotlin
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-dsl = { id = "org.gradle.kotlin.kotlin-dsl", version.ref = "kotlin-dsl" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-native-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
gradle-publish = { id = "com.gradle.plugin-publish", version.ref = "gradle-publish" }
maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "maven-publish" }
molecule = { id = "app.cash.molecule", version.ref = "molecule" }

[bundles]
test = ["compose-ui-test-junit4", "compose-ui-test-manifest"]
compose-core = ["compose-ui-tooling", "compose-material", "compose-material3"]
compose-navigation = ["compose-navigation", "compose-navigation-animiaton"]
compose-jetpack = ["compose-paging"]
